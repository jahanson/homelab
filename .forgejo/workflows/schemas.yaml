---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Schemas"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *" # Every day at midnight
  push:
    branches: ["main"]
    paths: [".forgejo/workflows/schemas.yaml"]

jobs:
  publish:
    name: Schemas
    runs-on: ["docker-x86_64"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: https://github.com/actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Workflow Tools
        shell: bash
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /usr/local/bin/

          curl -LO "https://dl.min.io/client/mc/release/linux-amd64/mc"
          chmod +x mc
          mv mc /usr/local/bin/

      - name: Setup Python
        run: |
          apt-get update
          apt-get install -y python3 python3-pip
          pip3 install --upgrade pip

      - name: Write kubeconfig
        id: kubeconfig
        uses: https://github.com/timheuer/base64-to-file@v1
        with:
          encodedString: "${{ secrets.KUBECONFIG }}"
          fileName: kubeconfig
          fileDir: $GITHUB_WORKSPACE

      - name: Write mc
        id: mcconfig
        uses: https://github.com/timheuer/base64-to-file@v1
        with:
          encodedString: "${{ secrets.MCCONFIG }}"
          fileName: config.json
          fileDir: $GITHUB_WORKSPACE

      - name: test kubectl
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        run: |
          kubectl get nodes
      - name: Download and run crd-extractor
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        shell: bash
        run: |
          curl -fsSL -o $GITHUB_WORKSPACE/crd-extractor.sh \
              https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/Utilities/crd-extractor.sh
          chmod +x $GITHUB_WORKSPACE/crd-extractor.sh
          bash $GITHUB_WORKSPACE/crd-extractor.sh

      - name: Deploy to Cloudflare R2
        shell: bash
        run: |
          mc cp --recursive $HOME/.datree/crdSchemas/ r2-ks/kubernetes-schemas
